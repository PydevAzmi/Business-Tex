# Generated by Django 4.2 on 2024-03-23 00:06

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ("accounts", "0003_alter_company_phone_number_alter_company_wa_phone_and_more"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="Fabric",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("name", models.CharField(max_length=50, verbose_name="fabric name")),
                (
                    "fabric_type",
                    models.CharField(max_length=50, verbose_name="fabric type"),
                ),
                (
                    "owner",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="owner",
                    ),
                ),
            ],
            options={
                "verbose_name": "Fabric",
                "verbose_name_plural": "Fabrics",
            },
        ),
        migrations.CreateModel(
            name="FabricDyeingFactory",
            fields=[
                (
                    "total_weight",
                    models.DecimalField(
                        decimal_places=2, max_digits=10, verbose_name="total weight"
                    ),
                ),
                (
                    "unit_type",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("Cartoon", "Cartoon"),
                            ("Bag", "Bag"),
                            ("Box", "Box"),
                            ("Pieces", "Pieces"),
                        ],
                        max_length=50,
                        null=True,
                        verbose_name="unit type",
                    ),
                ),
                (
                    "quantity_per_unit",
                    models.IntegerField(
                        blank=True, null=True, verbose_name="quantity per type"
                    ),
                ),
                (
                    "notes",
                    models.TextField(blank=True, null=True, verbose_name="notes"),
                ),
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("came_out_at", models.DateTimeField(verbose_name="Came Out At")),
                (
                    "dyeing_factory",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="accounts.person",
                        verbose_name="Dyeing Factory",
                    ),
                ),
            ],
            options={
                "verbose_name": "Fabric went for Dyeing Factory",
                "verbose_name_plural": "Fabrics went for Dyeing Factories",
            },
        ),
        migrations.CreateModel(
            name="FabricDyeingInventory",
            fields=[
                (
                    "total_weight",
                    models.DecimalField(
                        decimal_places=2, max_digits=10, verbose_name="total weight"
                    ),
                ),
                (
                    "unit_type",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("Cartoon", "Cartoon"),
                            ("Bag", "Bag"),
                            ("Box", "Box"),
                            ("Pieces", "Pieces"),
                        ],
                        max_length=50,
                        null=True,
                        verbose_name="unit type",
                    ),
                ),
                (
                    "quantity_per_unit",
                    models.IntegerField(
                        blank=True, null=True, verbose_name="quantity per type"
                    ),
                ),
                (
                    "notes",
                    models.TextField(blank=True, null=True, verbose_name="notes"),
                ),
                (
                    "unit_price",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        max_digits=10,
                        null=True,
                        verbose_name="unit price",
                    ),
                ),
                (
                    "total_price",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        max_digits=10,
                        null=True,
                        verbose_name="total price",
                    ),
                ),
                (
                    "added_tax",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        max_digits=10,
                        null=True,
                        verbose_name="added tax",
                    ),
                ),
                (
                    "discount",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        max_digits=10,
                        null=True,
                        verbose_name="discount",
                    ),
                ),
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "quantity_recieved",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        max_digits=10,
                        null=True,
                        verbose_name="received weight",
                    ),
                ),
                (
                    "quantity_remaining",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        max_digits=10,
                        null=True,
                        verbose_name="Remaining weight",
                    ),
                ),
                (
                    "quantity_buyied",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        max_digits=10,
                        null=True,
                        verbose_name="buyied",
                    ),
                ),
                (
                    "recieved_at",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="received At"
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("Buyed", "Buyed"),
                            ("Sold Out", "Sold Out"),
                            ("Returned", "Returned"),
                            ("Out of Stock", "Out of Stock"),
                            ("New Raw", "New Raw"),
                            ("In Dyeing", "In Dyeing"),
                            ("In Production", "In Production"),
                        ],
                        max_length=50,
                        null=True,
                        verbose_name="Status",
                    ),
                ),
                (
                    "located_at",
                    models.CharField(
                        blank=True, max_length=50, null=True, verbose_name="located at"
                    ),
                ),
                (
                    "fabric",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="business.fabric",
                        verbose_name="Fabric",
                    ),
                ),
                (
                    "fabric_dyeing_factory",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="business.fabricdyeingfactory",
                        verbose_name="Fabric Dyeing Factory",
                    ),
                ),
                (
                    "owner",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Owner",
                    ),
                ),
                (
                    "supplier",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="accounts.person",
                        verbose_name="Supplier",
                    ),
                ),
            ],
            options={
                "verbose_name": "Dyed fabric in stock",
                "verbose_name_plural": "Dyed fabrics in stock",
            },
        ),
        migrations.CreateModel(
            name="FabricInventory",
            fields=[
                (
                    "total_weight",
                    models.DecimalField(
                        decimal_places=2, max_digits=10, verbose_name="total weight"
                    ),
                ),
                (
                    "unit_type",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("Cartoon", "Cartoon"),
                            ("Bag", "Bag"),
                            ("Box", "Box"),
                            ("Pieces", "Pieces"),
                        ],
                        max_length=50,
                        null=True,
                        verbose_name="unit type",
                    ),
                ),
                (
                    "quantity_per_unit",
                    models.IntegerField(
                        blank=True, null=True, verbose_name="quantity per type"
                    ),
                ),
                (
                    "notes",
                    models.TextField(blank=True, null=True, verbose_name="notes"),
                ),
                (
                    "unit_price",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        max_digits=10,
                        null=True,
                        verbose_name="unit price",
                    ),
                ),
                (
                    "total_price",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        max_digits=10,
                        null=True,
                        verbose_name="total price",
                    ),
                ),
                (
                    "added_tax",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        max_digits=10,
                        null=True,
                        verbose_name="added tax",
                    ),
                ),
                (
                    "discount",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        max_digits=10,
                        null=True,
                        verbose_name="discount",
                    ),
                ),
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "quantity_recieved",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        max_digits=10,
                        null=True,
                        verbose_name="received weight",
                    ),
                ),
                (
                    "quantity_remaining",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        max_digits=10,
                        null=True,
                        verbose_name="remaining weight",
                    ),
                ),
                (
                    "quantity_out_dyeing",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        max_digits=10,
                        null=True,
                        verbose_name="out dyeing weight",
                    ),
                ),
                (
                    "quantity_buyied",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        max_digits=10,
                        null=True,
                        verbose_name="buyied",
                    ),
                ),
                (
                    "recieved_at",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="received At"
                    ),
                ),
                (
                    "located_at",
                    models.CharField(
                        blank=True, max_length=50, null=True, verbose_name="Located at"
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("Buyed", "Buyed"),
                            ("Sold Out", "Sold Out"),
                            ("Returned", "Returned"),
                            ("Out of Stock", "Out of Stock"),
                            ("New Raw", "New Raw"),
                            ("In Dyeing", "In Dyeing"),
                            ("In Production", "In Production"),
                        ],
                        max_length=50,
                        null=True,
                        verbose_name="Status",
                    ),
                ),
                (
                    "fabric",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="business.fabric",
                        verbose_name="Faric",
                    ),
                ),
                (
                    "owner",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Owner",
                    ),
                ),
                (
                    "supplier",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="accounts.person",
                        verbose_name="Factory or Supplier",
                    ),
                ),
            ],
            options={
                "verbose_name": "Fabric In Stock",
                "verbose_name_plural": "Fabrics In Stock",
            },
        ),
        migrations.CreateModel(
            name="Yarn",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("name", models.CharField(max_length=50, verbose_name="yarn name")),
                (
                    "yarn_type",
                    models.CharField(max_length=50, verbose_name="yarn type"),
                ),
                (
                    "owner",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="owner",
                    ),
                ),
            ],
            options={
                "verbose_name": "Yarn",
                "verbose_name_plural": "Yarns",
            },
        ),
        migrations.CreateModel(
            name="YarnInventory",
            fields=[
                (
                    "total_weight",
                    models.DecimalField(
                        decimal_places=2, max_digits=10, verbose_name="total weight"
                    ),
                ),
                (
                    "unit_type",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("Cartoon", "Cartoon"),
                            ("Bag", "Bag"),
                            ("Box", "Box"),
                            ("Pieces", "Pieces"),
                        ],
                        max_length=50,
                        null=True,
                        verbose_name="unit type",
                    ),
                ),
                (
                    "quantity_per_unit",
                    models.IntegerField(
                        blank=True, null=True, verbose_name="quantity per type"
                    ),
                ),
                (
                    "notes",
                    models.TextField(blank=True, null=True, verbose_name="notes"),
                ),
                (
                    "unit_price",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        max_digits=10,
                        null=True,
                        verbose_name="unit price",
                    ),
                ),
                (
                    "total_price",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        max_digits=10,
                        null=True,
                        verbose_name="total price",
                    ),
                ),
                (
                    "added_tax",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        max_digits=10,
                        null=True,
                        verbose_name="added tax",
                    ),
                ),
                (
                    "discount",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        max_digits=10,
                        null=True,
                        verbose_name="discount",
                    ),
                ),
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("recieved_at", models.DateTimeField(verbose_name="received at")),
                (
                    "located_at",
                    models.CharField(
                        blank=True, max_length=50, null=True, verbose_name="located at"
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("Buyed", "Buyed"),
                            ("Sold Out", "Sold Out"),
                            ("Returned", "Returned"),
                            ("Out of Stock", "Out of Stock"),
                            ("New Raw", "New Raw"),
                            ("In Dyeing", "In Dyeing"),
                            ("In Production", "In Production"),
                        ],
                        max_length=50,
                        null=True,
                        verbose_name="status",
                    ),
                ),
                (
                    "owner",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="owner",
                    ),
                ),
                (
                    "supplier",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="accounts.person",
                        verbose_name="supplier",
                    ),
                ),
                (
                    "yarn",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="business.yarn",
                        verbose_name="yarn",
                    ),
                ),
            ],
            options={
                "verbose_name": "Yarn In Stock",
                "verbose_name_plural": "Yarns In Stock",
            },
        ),
        migrations.CreateModel(
            name="YarnFactory",
            fields=[
                (
                    "total_weight",
                    models.DecimalField(
                        decimal_places=2, max_digits=10, verbose_name="total weight"
                    ),
                ),
                (
                    "unit_type",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("Cartoon", "Cartoon"),
                            ("Bag", "Bag"),
                            ("Box", "Box"),
                            ("Pieces", "Pieces"),
                        ],
                        max_length=50,
                        null=True,
                        verbose_name="unit type",
                    ),
                ),
                (
                    "quantity_per_unit",
                    models.IntegerField(
                        blank=True, null=True, verbose_name="quantity per type"
                    ),
                ),
                (
                    "notes",
                    models.TextField(blank=True, null=True, verbose_name="notes"),
                ),
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("orderd_at", models.DateTimeField(verbose_name="Orderd At")),
                (
                    "addons_weigth",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        max_digits=10,
                        null=True,
                        verbose_name="Addons weight",
                    ),
                ),
                (
                    "fabric_weight",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        max_digits=10,
                        null=True,
                        verbose_name="Fabric weight",
                    ),
                ),
                (
                    "waste_ratio",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        max_digits=10,
                        null=True,
                        verbose_name="Waste Ratio",
                    ),
                ),
                (
                    "addons_yarn",
                    models.ForeignKey(
                        blank=True,
                        max_length=50,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="business.yarn",
                        verbose_name="addons yarn",
                    ),
                ),
                (
                    "factory",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="accounts.person",
                        verbose_name="Factory",
                    ),
                ),
                (
                    "manufactured_fabric",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="business.fabric",
                        verbose_name="Manufactured Fabric",
                    ),
                ),
                (
                    "yarn_inventory",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="business.yarninventory",
                        verbose_name="Yarn Inventory",
                    ),
                ),
            ],
            options={
                "verbose_name": "Yarn In Factory",
                "verbose_name_plural": "Yarns In Factories",
            },
        ),
        migrations.CreateModel(
            name="SoldYarn",
            fields=[
                (
                    "total_weight",
                    models.DecimalField(
                        decimal_places=2, max_digits=10, verbose_name="total weight"
                    ),
                ),
                (
                    "unit_type",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("Cartoon", "Cartoon"),
                            ("Bag", "Bag"),
                            ("Box", "Box"),
                            ("Pieces", "Pieces"),
                        ],
                        max_length=50,
                        null=True,
                        verbose_name="unit type",
                    ),
                ),
                (
                    "quantity_per_unit",
                    models.IntegerField(
                        blank=True, null=True, verbose_name="quantity per type"
                    ),
                ),
                (
                    "notes",
                    models.TextField(blank=True, null=True, verbose_name="notes"),
                ),
                (
                    "unit_price",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        max_digits=10,
                        null=True,
                        verbose_name="unit price",
                    ),
                ),
                (
                    "total_price",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        max_digits=10,
                        null=True,
                        verbose_name="total price",
                    ),
                ),
                (
                    "added_tax",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        max_digits=10,
                        null=True,
                        verbose_name="added tax",
                    ),
                ),
                (
                    "discount",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        max_digits=10,
                        null=True,
                        verbose_name="discount",
                    ),
                ),
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("sold_at", models.DateTimeField(verbose_name="Sold At")),
                (
                    "customer",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="accounts.person",
                        verbose_name="Customer",
                    ),
                ),
                (
                    "owner",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Seller",
                    ),
                ),
                (
                    "yarn_inventory",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="business.yarninventory",
                        verbose_name="Yarn",
                    ),
                ),
            ],
            options={
                "verbose_name": "Sold Yarn",
                "verbose_name_plural": "Sold Yarns",
                "ordering": ["yarn_inventory", "customer", "sold_at"],
            },
        ),
        migrations.CreateModel(
            name="SoldFabric",
            fields=[
                (
                    "total_weight",
                    models.DecimalField(
                        decimal_places=2, max_digits=10, verbose_name="total weight"
                    ),
                ),
                (
                    "unit_type",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("Cartoon", "Cartoon"),
                            ("Bag", "Bag"),
                            ("Box", "Box"),
                            ("Pieces", "Pieces"),
                        ],
                        max_length=50,
                        null=True,
                        verbose_name="unit type",
                    ),
                ),
                (
                    "quantity_per_unit",
                    models.IntegerField(
                        blank=True, null=True, verbose_name="quantity per type"
                    ),
                ),
                (
                    "notes",
                    models.TextField(blank=True, null=True, verbose_name="notes"),
                ),
                (
                    "unit_price",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        max_digits=10,
                        null=True,
                        verbose_name="unit price",
                    ),
                ),
                (
                    "total_price",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        max_digits=10,
                        null=True,
                        verbose_name="total price",
                    ),
                ),
                (
                    "added_tax",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        max_digits=10,
                        null=True,
                        verbose_name="added tax",
                    ),
                ),
                (
                    "discount",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        max_digits=10,
                        null=True,
                        verbose_name="discount",
                    ),
                ),
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("sold_at", models.DateTimeField(verbose_name="Sold At")),
                (
                    "Fabric_Inventory",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="business.fabricinventory",
                        verbose_name="Fabric Inventory",
                    ),
                ),
                (
                    "customer",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="accounts.person",
                        verbose_name="Customer",
                    ),
                ),
                (
                    "fabric_dyeing_inventory",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="business.fabricdyeinginventory",
                        verbose_name="Fabric Dyeing Inventory",
                    ),
                ),
                (
                    "owner",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Seller",
                    ),
                ),
            ],
            options={
                "verbose_name": "Sold Fabric",
                "verbose_name_plural": "Sold Fabrics",
            },
        ),
        migrations.CreateModel(
            name="ReturnedYarn",
            fields=[
                (
                    "total_weight",
                    models.DecimalField(
                        decimal_places=2, max_digits=10, verbose_name="total weight"
                    ),
                ),
                (
                    "unit_type",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("Cartoon", "Cartoon"),
                            ("Bag", "Bag"),
                            ("Box", "Box"),
                            ("Pieces", "Pieces"),
                        ],
                        max_length=50,
                        null=True,
                        verbose_name="unit type",
                    ),
                ),
                (
                    "quantity_per_unit",
                    models.IntegerField(
                        blank=True, null=True, verbose_name="quantity per type"
                    ),
                ),
                (
                    "notes",
                    models.TextField(blank=True, null=True, verbose_name="notes"),
                ),
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("returned_at", models.DateTimeField(verbose_name="Returned At")),
                (
                    "status",
                    models.CharField(
                        blank=True,
                        choices=[("Invalid", "Invalid"), ("Valid", "Valid")],
                        max_length=50,
                        null=True,
                        verbose_name="Status",
                    ),
                ),
                (
                    "yarn_factory",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="business.yarnfactory",
                        verbose_name="Yarn in Factory",
                    ),
                ),
            ],
            options={
                "verbose_name": "Returned Yarn",
                "verbose_name_plural": "Returned Yarns",
            },
        ),
        migrations.CreateModel(
            name="ReturnedFabric",
            fields=[
                (
                    "total_weight",
                    models.DecimalField(
                        decimal_places=2, max_digits=10, verbose_name="total weight"
                    ),
                ),
                (
                    "unit_type",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("Cartoon", "Cartoon"),
                            ("Bag", "Bag"),
                            ("Box", "Box"),
                            ("Pieces", "Pieces"),
                        ],
                        max_length=50,
                        null=True,
                        verbose_name="unit type",
                    ),
                ),
                (
                    "quantity_per_unit",
                    models.IntegerField(
                        blank=True, null=True, verbose_name="quantity per type"
                    ),
                ),
                (
                    "notes",
                    models.TextField(blank=True, null=True, verbose_name="notes"),
                ),
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("returned_at", models.DateTimeField(verbose_name="Returned At")),
                (
                    "status",
                    models.CharField(
                        blank=True,
                        choices=[("Invalid", "Invalid"), ("Valid", "Valid")],
                        max_length=50,
                        null=True,
                        verbose_name="Status",
                    ),
                ),
                (
                    "fabric_inventory",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="business.fabricinventory",
                        verbose_name="Fabric Inventory",
                    ),
                ),
            ],
            options={
                "verbose_name": "Returned Fabric",
                "verbose_name_plural": "Returned Fabrics",
            },
        ),
        migrations.AddField(
            model_name="fabricinventory",
            name="yarn_factory",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                to="business.yarnfactory",
                verbose_name="Yarn Factory",
            ),
        ),
        migrations.AddField(
            model_name="fabricdyeingfactory",
            name="fabric_inv",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                to="business.fabricinventory",
                verbose_name="Fabric Inventory",
            ),
        ),
    ]
