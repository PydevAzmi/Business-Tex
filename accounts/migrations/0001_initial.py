# Generated by Django 4.2 on 2024-03-20 21:28

import accounts.models
from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import django_countries.fields


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
    ]

    operations = [
        migrations.CreateModel(
            name="User",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("password", models.CharField(max_length=128, verbose_name="password")),
                (
                    "last_login",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last login"
                    ),
                ),
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False,
                        help_text="Designates that this user has all permissions without explicitly assigning them.",
                        verbose_name="superuser status",
                    ),
                ),
                (
                    "username",
                    models.CharField(
                        error_messages={
                            "unique": "A user with that username already exists."
                        },
                        help_text="Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.",
                        max_length=150,
                        unique=True,
                        validators=[
                            django.contrib.auth.validators.UnicodeUsernameValidator()
                        ],
                        verbose_name="username",
                    ),
                ),
                (
                    "first_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="first name"
                    ),
                ),
                (
                    "last_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="last name"
                    ),
                ),
                (
                    "is_staff",
                    models.BooleanField(
                        default=False,
                        help_text="Designates whether the user can log into this admin site.",
                        verbose_name="staff status",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="Designates whether this user should be treated as active. Unselect this instead of deleting accounts.",
                        verbose_name="active",
                    ),
                ),
                (
                    "date_joined",
                    models.DateTimeField(
                        default=django.utils.timezone.now, verbose_name="date joined"
                    ),
                ),
                (
                    "country",
                    django_countries.fields.CountryField(
                        blank=True,
                        default="Egypt",
                        max_length=2,
                        null=True,
                        verbose_name="Country",
                    ),
                ),
                (
                    "city",
                    models.CharField(
                        blank=True, max_length=50, null=True, verbose_name="City"
                    ),
                ),
                (
                    "address",
                    models.CharField(
                        blank=True, max_length=50, null=True, verbose_name="address 1"
                    ),
                ),
                (
                    "address_2",
                    models.CharField(
                        blank=True, max_length=50, null=True, verbose_name="address 2"
                    ),
                ),
                (
                    "email",
                    models.EmailField(
                        max_length=254, unique=True, verbose_name="Email"
                    ),
                ),
                (
                    "phone_number",
                    models.CharField(max_length=11, verbose_name="Phone Number"),
                ),
                (
                    "wa_phone",
                    models.CharField(
                        max_length=11, unique=True, verbose_name="Whatsapp Phone Number"
                    ),
                ),
                (
                    "profile_image",
                    models.ImageField(
                        blank=True,
                        null=True,
                        upload_to=accounts.models.profile_image_path,
                        verbose_name="Profile Image",
                    ),
                ),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        help_text="The groups this user belongs to. A user will get all permissions granted to each of their groups.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.group",
                        verbose_name="groups",
                    ),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Specific permissions for this user.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.permission",
                        verbose_name="user permissions",
                    ),
                ),
            ],
            options={
                "verbose_name": "User",
                "verbose_name_plural": "Users",
            },
            managers=[
                ("objects", django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name="Person",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "country",
                    django_countries.fields.CountryField(
                        blank=True,
                        default="Egypt",
                        max_length=2,
                        null=True,
                        verbose_name="Country",
                    ),
                ),
                (
                    "city",
                    models.CharField(
                        blank=True, max_length=50, null=True, verbose_name="City"
                    ),
                ),
                (
                    "address",
                    models.CharField(
                        blank=True, max_length=50, null=True, verbose_name="address 1"
                    ),
                ),
                (
                    "address_2",
                    models.CharField(
                        blank=True, max_length=50, null=True, verbose_name="address 2"
                    ),
                ),
                ("name", models.CharField(max_length=150, verbose_name="Name")),
                (
                    "email",
                    models.EmailField(
                        blank=True, max_length=254, null=True, verbose_name="Email"
                    ),
                ),
                (
                    "phone_number",
                    models.CharField(max_length=150, verbose_name="Phone Number"),
                ),
                (
                    "wa_phone",
                    models.CharField(
                        max_length=11, unique=True, verbose_name="Whatsapp Phone Number"
                    ),
                ),
                (
                    "role",
                    models.CharField(
                        choices=[
                            ("Factory", "Factory"),
                            ("Supplier", "Supplier"),
                            ("Customer", "Customer"),
                            ("Dyeing Factory", "Dyeing Factory"),
                        ],
                        max_length=50,
                        verbose_name="Role",
                    ),
                ),
                (
                    "owner",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Owner",
                    ),
                ),
            ],
            options={
                "verbose_name": "Person",
                "verbose_name_plural": "Persons",
                "ordering": ["role"],
            },
        ),
        migrations.CreateModel(
            name="Company",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "country",
                    django_countries.fields.CountryField(
                        blank=True,
                        default="Egypt",
                        max_length=2,
                        null=True,
                        verbose_name="Country",
                    ),
                ),
                (
                    "city",
                    models.CharField(
                        blank=True, max_length=50, null=True, verbose_name="City"
                    ),
                ),
                (
                    "address",
                    models.CharField(
                        blank=True, max_length=50, null=True, verbose_name="address 1"
                    ),
                ),
                (
                    "address_2",
                    models.CharField(
                        blank=True, max_length=50, null=True, verbose_name="address 2"
                    ),
                ),
                ("name", models.CharField(max_length=150, verbose_name="Name")),
                (
                    "email",
                    models.EmailField(
                        blank=True, max_length=254, null=True, verbose_name="Email"
                    ),
                ),
                (
                    "phone_number",
                    models.CharField(max_length=150, verbose_name="Phone Number"),
                ),
                (
                    "wa_phone",
                    models.CharField(
                        max_length=11, unique=True, verbose_name="Whatsapp Phone Number"
                    ),
                ),
                (
                    "logo",
                    models.ImageField(
                        upload_to=accounts.models.company_logo_path, verbose_name="Logo"
                    ),
                ),
                (
                    "bio",
                    models.CharField(
                        blank=True, max_length=50, null=True, verbose_name="Bio"
                    ),
                ),
                (
                    "owner",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Owner",
                    ),
                ),
            ],
            options={
                "verbose_name": "Company",
                "verbose_name_plural": "Companies",
            },
        ),
    ]
